from sklearn.datasets import load_digits

import pylab as pl

import pylab as pl

pl.gray()

pl.matshow(digits.images[0])
pl.show()


digits.images[0]

digits.images[0].reshape(-1)

%%HTML
<video width="80%" controls> 
    <source src="./flatten.mp4" type="video/mp4"> 
</video>

from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix
import pylab as plt


y = digits.target

n_samples = len(digits.images)
n_samples

X = digits.images.reshape((n_samples, -1))
X.shape

print(X)



X_train, X_test, y_train, y_test = train_test_split(
    X, y, 
    random_state=0)
    
clf = KNeighborsClassifier(3)


fit = clf.fit(X_train, y_train)


predicted = fit.predict(X_test)

confusion_matrix(y_test, predicted)


images_and_predictions = list(zip(digits.images, fit.predict(X)))

for index, (image, prediction) in enumerate(images_and_predictions[:6]):
    plt.subplot(6,3,index+5)
    plt.axis("off")
    plt.imshow(image, cmap=plt.cm.gray_r, interpolation='nearest')
    plt.title('Prediction: %i' % prediction)
plt.show()






